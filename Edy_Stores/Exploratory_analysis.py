import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = pd.read_csv(r"C:\Users\New-user\Downloads\Bumpa Stores analysis\Cleaned_dataset_bumpa.csv")

monthly_quantity = data.groupby(['month', 'product_category'])['quantity_sold'].sum().reset_index()
monthly_top_category = monthly_quantity.loc[monthly_quantity.groupby('month')['quantity_sold'].idxmax()]

total_quantity = data.groupby('product_category')['quantity_sold'].sum().reset_index()
total_top_category = total_quantity.loc[total_quantity['quantity_sold'].idxmax()]

print("Most Sold Product Category Monthly (by Quantity):")
print(monthly_top_category)

print("\nMost Sold Product Category for Three Months Combined (by Quantity):")
print(total_top_category)

weekly_sales = data.groupby('week')['revenue'].sum()
monthly_sales = data.groupby('month')['revenue'].sum()
print("\nWeekly Sales Growth Pattern:")
print(weekly_sales)
print("\nMonthly Sales Growth Pattern:")
print(monthly_sales)

top_categories_revenue = data.groupby('product_category')['revenue'].sum().sort_values(ascending=False)
print("\nTop Product Categories by Total Revenue:")
print(top_categories_revenue)

average_revenue_category = data.groupby('product_category')['revenue'].mean()
print("\nAverage Revenue per Product Category:")
print(average_revenue_category)

top_products_revenue = data.loc[data.groupby('product_category')['revenue'].idxmax()]
top_products_quantity = data.loc[data.groupby('product_category')['quantity_sold'].idxmax()]
print("\nTop Products in Each Category by Revenue:")
print(top_products_revenue[['product_category', 'product_name', 'revenue']])
print("\nTop Products in Each Category by Quantity:")
print(top_products_quantity[['product_category', 'product_name', 'quantity_sold']])

top_customers = data.groupby('customer_id')['revenue'].sum().sort_values(ascending=False).head(10)
top_customer_details = data[data['customer_id'].isin(top_customers.index)]
print("\nTop Buying Customers by Revenue:")
print(top_customers)
print("\nDetails of Items Bought by Top Customers:")
print(top_customer_details[['customer_id', 'product_name', 'product_category', 'revenue']])

most_purchased_product = data.loc[data['quantity_sold'].idxmax()]
highest_revenue_product = data.loc[data['revenue'].idxmax()]
print("\nMost Purchased Product by Quantity:")
print(most_purchased_product[['product_name', 'quantity_sold']])
print("\nProduct with Highest Revenue:")
print(highest_revenue_product[['product_name', 'revenue']])

marketing_channel_usage = data['marketing_channel'].value_counts()
marketing_channel_revenue = data.groupby('marketing_channel')['revenue'].sum()
print("\nMost Used Marketing Channels:")
print(marketing_channel_usage)
print("\nRevenue Generated from Marketing Channels:")
print(marketing_channel_revenue)

store_plan_revenue = data.groupby('store_plan')['revenue'].sum()
print("\nRevenue Generated by Store Plans:")
print(store_plan_revenue)

correlation_matrix = data[['revenue', 'quantity_sold']].corr()
print("\nCorrelation Between Quantity Sold and Revenue:")
print(correlation_matrix)

full_correlation = data[['revenue', 'quantity_sold', 'store_plan', 'marketing_channel']].apply(lambda col: pd.factorize(col)[0] if col.dtype == 'object' else col).corr()
print("\nCorrelation Matrix:")
print(full_correlation)

plt.figure(figsize=(10, 6))
sns.heatmap(full_correlation, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Matrix")
plt.show()
